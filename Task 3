# AI chatbot with NLP

import nltk
import random
import string
from nltk.stem import WordNetLemmatizer

# Download NLTK resources (only required once)
nltk.download('punkt_tab')
nltk.download('wordnet')

# Initialize the lemmatizer
lemmatizer = WordNetLemmatizer()

# Define sample knowledge base
RESPONSES = {
    "greeting": ["Hello! How can I help you?", "Hi there! Need any assistance?", "Hey! What can I do for you?"],
    "goodbye": ["Goodbye!", "See you later!", "Have a great day!"],
    "thanks": ["You're welcome!", "No problem!", "Happy to help!"],
    "name": ["I'm a chatbot created to help you!", "You can call me ChatBot."],
    "help": ["I can assist you with general queries like greetings, help, or basic questions."]
}

# Keywords to map intents
KEYWORDS = {
    "greeting": ["hello", "hi", "hey"],
    "goodbye": ["bye", "goodbye", "see you"],
    "thanks": ["thanks", "thank you"],
    "name": ["your name", "who are you"],
    "help": ["help", "support"]
}

# Preprocess user input
def preprocess(sentence):
    tokens = nltk.word_tokenize(sentence.lower())
    tokens = [lemmatizer.lemmatize(word) for word in tokens if word not in string.punctuation]
    return tokens

# Match intent
def get_intent(tokens):
    for intent, keywords in KEYWORDS.items():
        if any(kw in " ".join(tokens) for kw in keywords):
            return intent
    return None

# Chatbot main function
def chatbot():
    print("ChatBot: Hello! I'm your AI assistant. Type 'bye' to exit.")
    while True:
        user_input = input("You: ")
        tokens = preprocess(user_input)

        if "bye" in tokens:
            print("ChatBot:", random.choice(RESPONSES["goodbye"]))
            break

        intent = get_intent(tokens)

        if intent:
            print("ChatBot:", random.choice(RESPONSES[intent]))
        else:
            print("ChatBot: I'm not sure I understand. Could you rephrase?")

# Run the chatbot
if __name__ == "__main__":
    chatbot()
